//namespace NasgaScrape
module NasgaScrape

//http://fsharpforfunandprofit.com/posts/concurrency-async-and-parallel/
//Example: an async web downloader
// a list of sites to fetch
//let sites = ["http://www.bing.com";
//             "http://www.google.com";
//             "http://www.microsoft.com";
//             "http://www.amazon.com";
//             "http://www.yahoo.com"]
//
//#time                      // turn interactive timer on
//sites 
//|> List.map fetchUrlAsync  // make a list of async tasks
//|> Async.Parallel          // set up the tasks to run in parallel
//|> Async.RunSynchronously  // start them off
//#time                      // turn timer off


//function that takes a list of classes and a year, calls fetchUrlAsync (which takes a year) passes year to it
//returns sequence of results

open System.Net
open System
open System.IO

// Fetch the contents of a web page asynchronously
let fetchUrlAsync url =        
    async {                             
        let req = WebRequest.Create(Uri(url)) 
        use! resp = req.AsyncGetResponse()  // new keyword "use!"  
        use stream = resp.GetResponseStream() 
        use reader = new IO.StreamReader(stream) 
        let html = reader.ReadToEnd() 
        printfn "finished downloading %s" url 
        }
